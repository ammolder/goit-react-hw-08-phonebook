{"version":3,"file":"static/js/856.2e751685.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","pages/Contacts/Contacts.styled.js","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import styled from 'styled-components';\nimport { Spinner } from '@chakra-ui/react';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  margin-top: 60px;\n`;\nexport const TitleEl = styled.h2`\n  margin-left: 15px;\n  font-size: 30px;\n  color: ${p => p.theme.colors.title};\n`;\nexport const SpanEl = styled.span`\n  margin-left: 80px;\n`;\nexport const SpinnerEl = styled(Spinner)`\n  margin-left: 90px;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: block;\n  width: 350px;\n\n  margin-bottom: 50px;\n`;\n\nexport const Label = styled.label`\n  color: #f441a5;\n  display: grid;\n  /* place-items: center; */\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n\n  color: ${p => p.theme.colors.title};\n  margin-bottom: 5px;\n  border: 1px solid ${p => p.theme.colors.blue};\n  border-radius: 4px;\n  width: 22ch;\n  animation: typing 2s steps(22), blink 0.5s step-end infinite alternate;\n  white-space: nowrap;\n  overflow: hidden;\n  border-right: 3px solid;\n  font-family: monospace;\n  font-size: 2em;\n  @keyframes typing {\n    from {\n      width: 0;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  text-decoration: none;\n  /* position: absolute; */\n  border: none;\n  font-size: 14px;\n  font-family: inherit;\n  color: #fff;\n  width: 9em;\n  height: 3em;\n  line-height: 2em;\n  text-align: center;\n  background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);\n  background-size: 300%;\n  border-radius: 30px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form, Label, Input, Button } from './ContactsForm.styled';\n\nexport const ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(item => item.name === name)) {\n      reset();\n      return alert(`${name} is already in contacts`);\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const handleNameChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('There is no such value');\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleNameChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit \">Add contact</Button>\n      </Form>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  text-decoration: none;\n  position: absolute;\n  border: none;\n  font-size: 14px;\n  font-family: inherit;\n  color: #fff;\n  width: 9em;\n  text-align: center;\n  background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);\n  background-size: 300%;\n  border-radius: 30px;\n`;\n\nexport const List = styled.ul``;\n","import { useDispatch, useSelector } from 'react-redux';\n// Імпортуємо генератор екшену\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { List, Button } from './ContactsList.styled.js';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const visibleContacts = filterContacts();\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <Button\n            type=\"button\"\n            onClick={() => {\n              handleDelete(id);\n            }}\n          >\n            Delete\n          </Button>\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Input } from '@chakra-ui/react';\n\nexport const Text = styled.div`\n  color: #f441a5;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nexport const InputEl = styled(Input)`\n  width: 300px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/slices/filterSlice';\nimport { Text, Label, InputEl } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onSearch = e => {\n    e.preventDefault();\n\n    dispatch(filterContacts(e.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      <Text>Find contacts by name</Text>\n      <InputEl\n        type=\"text\"\n        name=\"filter\"\n        color=\"teal\"\n        placeholder=\"Please enter a name\"\n        _placeholder={{ color: 'inherit' }}\n        onChange={onSearch}\n      />\n    </Label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nimport { Wrapper, TitleEl, SpanEl, SpinnerEl } from './Contacts.styled.js';\nimport { ContactsForm } from 'components/ContactsForm';\nimport { ContactsList } from 'components/ContactsList';\nimport { Filter } from 'components/Filter';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <SpanEl>\n        <TitleEl>Phonebook</TitleEl>\n        <ContactsForm />\n      </SpanEl>\n      <SpanEl>\n        <TitleEl>Filter</TitleEl>\n        <Filter />\n        {isLoading && !error && <SpinnerEl size=\"xl\" />}\n      </SpanEl>\n      <SpanEl>\n        <TitleEl>Contacts</TitleEl>\n\n        <ContactsList />\n      </SpanEl>\n    </Wrapper>\n  );\n};\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","Wrapper","styled","TitleEl","p","theme","colors","title","SpanEl","SpinnerEl","Spinner","Form","Label","Input","blue","Button","ContactsForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleNameChange","e","currentTarget","value","console","log","reset","onSubmit","preventDefault","find","item","alert","addContact","type","onChange","pattern","required","List","ContactsList","visibleContacts","normalizedFilter","toLowerCase","contact","includes","filterContacts","map","id","onClick","deleteContact","handleDelete","Text","InputEl","Filter","color","placeholder","_placeholder","useEffect","fetchContacts","size"],"sourceRoot":""}