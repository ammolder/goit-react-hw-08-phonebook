{"version":3,"file":"static/js/686.ff5273e7.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","pages/Contacts/Contacts.styled.js","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  color: ${p => p.theme.colors.title};\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-block;\n  margin-bottom: 50px;\n`;\n\nexport const Label = styled.label`\n  color: #f441a5;\n  display: grid;\n  place-items: center;\n`;\n\nexport const Input = styled.input`\n  color: ${p => p.theme.colors.title};\n  margin-bottom: 5px;\n  border: 1px solid ${p => p.theme.colors.blue};\n  border-radius: 4px;\n  width: 22ch;\n  animation: typing 2s steps(22), blink 0.5s step-end infinite alternate;\n  white-space: nowrap;\n  overflow: hidden;\n  border-right: 3px solid;\n  font-family: monospace;\n  font-size: 2em;\n  @keyframes typing {\n    from {\n      width: 0;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  text-decoration: none;\n  position: absolute;\n  border: none;\n  font-size: 14px;\n  font-family: inherit;\n  color: #fff;\n  width: 9em;\n  height: 3em;\n  line-height: 2em;\n  text-align: center;\n  background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);\n  background-size: 300%;\n  border-radius: 30px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form, Label, Input, Button } from './ContactsForm.styled';\n\nexport const ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(item => item.name === name)) {\n      reset();\n      return alert(`${name} is already in contacts`);\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const handleNameChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('There is no such value');\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleNameChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit \">Add contact</Button>\n      </Form>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  text-decoration: none;\n  position: absolute;\n  border: none;\n  font-size: 14px;\n  font-family: inherit;\n  color: #fff;\n  width: 9em;\n  text-align: center;\n  background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);\n  background-size: 300%;\n  border-radius: 30px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n// Імпортуємо генератор екшену\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { Button } from './ContactsList.styled.js';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const visibleContacts = filterContacts();\n  return (\n    <ul>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <Button\n            type=\"button\"\n            onClick={() => {\n              handleDelete(id);\n            }}\n          >\n            Delete\n          </Button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/slices/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onSearch = e => {\n    e.preventDefault();\n\n    dispatch(filterContacts(e.currentTarget.value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Please enter a name\"\n        onChange={onSearch}\n      />\n    </label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Wrapper } from './Contacts.styled.js';\nimport { ContactsForm } from 'components/ContactsForm';\nimport { ContactsList } from 'components/ContactsList';\nimport { Filter } from 'components/Filter';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <h1>Phonebook</h1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && (\n        <b>\n          <CircularProgress />\n        </b>\n      )}\n      <ContactsList />\n    </Wrapper>\n  );\n};\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","theme","_extends","display","transition","transitions","create","vars","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","React","inProps","ref","useThemeProps","className","size","style","thickness","value","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","width","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","Wrapper","p","colors","title","Form","Label","Input","blue","Button","ContactsForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleNameChange","e","currentTarget","console","log","reset","onSubmit","preventDefault","find","item","alert","addContact","type","onChange","pattern","required","ContactsList","visibleContacts","normalizedFilter","toLowerCase","contact","includes","filterContacts","map","id","onClick","deleteContact","handleDelete","Filter","placeholder","useEffect","fetchContacts"],"sourceRoot":""}